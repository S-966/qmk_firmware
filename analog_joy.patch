diff --git a/keyboards/dichotemy/config.h b/keyboards/dichotemy/config.h
index b3bd6d942..33f6046cb 100644
--- a/keyboards/dichotemy/config.h
+++ b/keyboards/dichotemy/config.h
@@ -67,13 +67,17 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
 //#define NO_ACTION_MACRO
 //#define NO_ACTION_FUNCTION
 
+#define ANALOG_JOY 1
+
+#if 0
 //UART settings for communication with the RF microcontroller
 #define SERIAL_UART_BAUD 1000000
 #define SERIAL_UART_DATA UDR1
 #define SERIAL_UART_UBRR (F_CPU / (16UL * SERIAL_UART_BAUD) - 1)
 #define SERIAL_UART_TXD_READY (UCSR1A & _BV(UDRE1))
 #define SERIAL_UART_RXD_PRESENT (UCSR1A & _BV(RXC1))
-#define SERIAL_UART_INIT() do { \
+
+#define SERIAL_UART_INIT() do {                 \
     	/* baud rate */ \
     	UBRR1L = SERIAL_UART_UBRR; \
     	/* baud rate */ \
@@ -83,5 +87,7 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
     	/* 8-bit data */ \
     	UCSR1C = _BV(UCSZ11) | _BV(UCSZ10); \
   	} while(0)
+#endif // 0
+
 
 #endif
diff --git a/keyboards/dichotemy/dichotemy.c b/keyboards/dichotemy/dichotemy.c
index 080c2654c..8518082de 100644
--- a/keyboards/dichotemy/dichotemy.c
+++ b/keyboards/dichotemy/dichotemy.c
@@ -2,45 +2,109 @@
 #include "pointing_device.h"
 #include "report.h"
 
-void uart_init(void) {
-	SERIAL_UART_INIT();
+#if 1
+#define PIN_JOY_LX 9
+#define PIN_JOY_LY 9
+#define PIN_JOY_RX 9
+#define PIN_JOY_RY 9
+
+extern int16_t analogRead(uint8_t pin);
+
+void pointing_device_init(void){
+    //initialize device, if that needs to be done.
+    
+}
+#endif
+
+// void uart_init(void) {
+// 	SERIAL_UART_INIT();
+// }
+
+int16_t range(int16_t v)
+{
+  const int16_t MIN=-127, MAX=127;
+  int16_t va;
+ 
+  if(v < MIN) va = MIN;
+  else if(v > MAX) va = MAX;
+  
+  return va;
 }
 
-void pointing_device_task(void){
+int16_t zero_adjust(int16_t v)
+{
+  const int16_t ZERO_THRESH = 6;
+  const int16_t MAX = 490;
+  int16_t v_abs, sign;
+  
+  sign = (v < 0)? -1:1;
+  v_abs = abs(v);
+  
+  if(v_abs > MAX) return MAX * sign;
+
+  if(v_abs < ZERO_THRESH) return 0;   
+
+  return (v_abs - ZERO_THRESH) * sign;
+}
+
+#define MAP(x, in_min, in_max, out_min, out_max) \
+    ((x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min)
+
+typedef struct {
+    int16_t x;
+    int16_t y;
+} sJOYPAD;
+
+void read_joypad(sJOYPAD *joy) {
+    int16_t *jx = &(joy->x);
+    int16_t *jy = &(joy->y);
+
+    *jx = (*jx * 9 + zero_adjust(analogRead(PIN_JOY_LX) - 512)) / 10;
+    *jy = (*jy * 9 + zero_adjust(analogRead(PIN_JOY_LY) - 512)) / 10;
+}
+
+
+void pointing_device_task(void) {
 	report_mouse_t currentReport = {};
-    SERIAL_UART_INIT();
-    uint32_t timeout = 0;
+    // SERIAL_UART_INIT();
+    // uint32_t timeout = 0;
 
     //the m character requests the RF slave to send the mouse report
-    SERIAL_UART_DATA = 'm';
+    // SERIAL_UART_DATA = 'm';
 
     //trust the external inputs completely, erase old data
-    uint8_t uart_data[5] = {0};
-
-    //there are 10 bytes corresponding to 10 columns, and an end byte
-    for (uint8_t i = 0; i < 5; i++) {
-        //wait for the serial data, timeout if it's been too long
-        //this only happened in testing with a loose wire, but does no
-        //harm to leave it in here
-        while(!SERIAL_UART_RXD_PRESENT){
-            timeout++;
-            if (timeout > 10000){
-                break;
-            }
-        } 
-        uart_data[i] = SERIAL_UART_DATA;
-    }
+    // uint8_t uart_data[5] = {0};
+
+    // //there are 10 bytes corresponding to 10 columns, and an end byte
+    // for (uint8_t i = 0; i < 5; i++) {
+    //     //wait for the serial data, timeout if it's been too long
+    //     //this only happened in testing with a loose wire, but does no
+    //     //harm to leave it in here
+    //     while(!SERIAL_UART_RXD_PRESENT){
+    //         timeout++;
+    //         if (timeout > 10000){
+    //             // time out error
+    //             break;
+    //         }
+    //     } 
+    //     uart_data[i] = SERIAL_UART_DATA;
+    // }
 
     //check for the end packet, bits 1-4 are movement and scroll
     //but bit 5 has bits 0-3 for the scroll button state
 	//(1000 if pressed, 0000 if not) and bits 4-7 are always 1
 	//We can use this to verify the report sent properly.
-    if (uart_data[4] == 0x0F || uart_data[4] == 0x8F)
+    // if (uart_data[4] == 0x0F || uart_data[4] == 0x8F)
     {
-		currentReport = pointing_device_get_report();
+        sJOYPAD jpad_l, jpad_r;
+        
+        read_joypad(&jpad_l);
+        read_joypad(&jpad_r);
+
+        currentReport = pointing_device_get_report();
         //shifting and transferring the info to the mouse report varaible
         //mouseReport.x = 127 max -127 min
-		currentReport.x = uart_data[0];
+		currentReport.x = jpad_l.x;
         //mouseReport.y = 127 max -127 min
 		currentReport.y = uart_data[1];
         //mouseReport.v = 127 max -127 min (scroll vertical)
@@ -59,20 +123,20 @@ void pointing_device_task(void){
     pointing_device_send();
 }
 
-void led_init(void) {
-	DDRD  |= (1<<1);
-	PORTD |= (1<<1);
-	DDRF  |= (1<<4) | (1<<5);
-	PORTF |= (1<<4) | (1<<5);
-}
+// void led_init(void) {
+// 	DDRD  |= (1<<1);
+// 	PORTD |= (1<<1);
+// 	DDRF  |= (1<<4) | (1<<5);
+// 	PORTF |= (1<<4) | (1<<5);
+// }
 
 
 void matrix_init_kb(void) {
 	// put your keyboard start-up code here
 	// runs once when the firmware starts up
 	matrix_init_user();
-	uart_init();
-	led_init();
+	// uart_init();
+	// led_init();
 }
 
 void matrix_scan_kb(void) {
diff --git a/keyboards/dichotemy/dichotemy.h b/keyboards/dichotemy/dichotemy.h
index 1d617d91c..a5ca75437 100644
--- a/keyboards/dichotemy/dichotemy.h
+++ b/keyboards/dichotemy/dichotemy.h
@@ -6,6 +6,15 @@
 #include "backlight.h"
 #include <stddef.h>
 
+#define JOYCEEE 1
+
+#if JOYCEEE
+ #define JOY_LX PF7                                                              // A0
+ #define JOY_LY PF6                                                              // A1
+ #define JOY_RX PF5                                                              // A2
+ #define JOY_RY PF4                                                              // A3
+
+#else
 #define red_led_off   PORTF |= (1<<5)
 #define red_led_on    PORTF &= ~(1<<5)
 #define blu_led_off   PORTF |= (1<<4)
@@ -21,7 +30,7 @@
 #define set_led_magenta red_led_on;  grn_led_off; blu_led_on
 #define set_led_cyan    red_led_off; grn_led_on;  blu_led_on
 #define set_led_white   red_led_on;  grn_led_on;  blu_led_on
-
+#endif // JOYCEEE
 /*
 #define LED_B 5
 #define LED_R 6
diff --git a/keyboards/dichotemy/matrix.c b/keyboards/dichotemy/matrix.c
index f2841df1d..6a925f150 100644
--- a/keyboards/dichotemy/matrix.c
+++ b/keyboards/dichotemy/matrix.c
@@ -85,6 +85,7 @@ void matrix_init(void) {
 
 uint8_t matrix_scan(void)
 {
+#if 0
     SERIAL_UART_INIT();
 
     uint32_t timeout = 0;
@@ -129,7 +130,7 @@ uint8_t matrix_scan(void)
 			//bithack mirror!  Doesn't make any sense, but works - and efficiently.
         }
     }
-
+#endif // 0
 
     matrix_scan_quantum();
     return 1;
diff --git a/lib/ugfx b/lib/ugfx
--- a/lib/ugfx
+++ b/lib/ugfx
@@ -1 +1 @@
-Subproject commit 3e97b74e03c93631cdd3ddb2ce43b963fdce19b2
+Subproject commit 3e97b74e03c93631cdd3ddb2ce43b963fdce19b2-dirty
